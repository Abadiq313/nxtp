/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { StableSwap, StableSwapInterface } from "../StableSwap";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amplificationParameter",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "amplificationParameter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAmplificationParameter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "indexIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "indexOut",
        type: "uint256",
      },
    ],
    name: "onSwapGivenIn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "indexIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "indexOut",
        type: "uint256",
      },
    ],
    name: "onSwapGivenOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amplificationParameter",
        type: "uint256",
      },
    ],
    name: "updateAmplificationParameter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610ce3380380610ce383398101604081905261002f916100d3565b3360601b60805261004d670de0b6b3a764000082101561012c61006e565b61006669010f0cf064dd5920000082111561012d61006e565b6000556100eb565b8161007c5761007c81610080565b5050565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b6000602082840312156100e4578081fd5b5051919050565b60805160601c610bdb610108600039600060f30152610bdb6000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80631cb2333d1461005c5780631ff3bc6b146100775780636daccffa1461008a57806377a743021461009257806397010c6f146100a5575b600080fd5b61006560005481565b60405190815260200160405180910390f35b610065610085366004610a16565b6100ba565b600054610065565b6100656100a0366004610a16565b6100d6565b6100b86100b33660046109fe565b6100e8565b005b6000806100cc6000548686868a610174565b9695505050505050565b6000806100cc6000548686868a6102b0565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461016f5760405162461bcd60e51b815260206004820152602260248201527f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f604482015261371760f11b606482015260840160405180910390fd5b600055565b600080610181878761039e565b90506101bd838786815181106101a757634e487b7160e01b600052603260045260246000fd5b602002602001015161056e90919063ffffffff16565b8685815181106101dd57634e487b7160e01b600052603260045260246000fd5b60200260200101818152505060006101f788888489610592565b90506102338488878151811061021d57634e487b7160e01b600052603260045260246000fd5b60200260200101516107d790919063ffffffff16565b87868151811061025357634e487b7160e01b600052603260045260246000fd5b6020026020010181815250506102a4600161029e89898151811061028757634e487b7160e01b600052603260045260246000fd5b60200260200101518461056e90919063ffffffff16565b906107d7565b98975050505050505050565b6000806102bd878761039e565b90506102e38387878151811061021d57634e487b7160e01b600052603260045260246000fd5b86868151811061030357634e487b7160e01b600052603260045260246000fd5b602002602001018181525050600061031d88888488610592565b9050610343848888815181106101a757634e487b7160e01b600052603260045260246000fd5b87878151811061036357634e487b7160e01b600052603260045260246000fd5b6020026020010181815250506102a46001610398838a89815181106101a757634e487b7160e01b600052603260045260246000fd5b9061056e565b80516000908190815b818110156103fd576103e98582815181106103d257634e487b7160e01b600052603260045260246000fd5b6020026020010151846107d790919063ffffffff16565b9250806103f581610b5e565b9150506103a7565b508161040e57600092505050610568565b6000828161041c88856107fb565b905060005b60ff81101561055f57600061045e868a60008151811061045157634e487b7160e01b600052603260045260246000fd5b60200260200101516107fb565b905060015b868110156104b5576104a161049b610495848d858151811061045157634e487b7160e01b600052603260045260246000fd5b896107fb565b86610829565b9150806104ad81610b5e565b915050610463565b5083945061050f6104e56104d26104cc868b6107fb565b846107fb565b61029e6104df8a896107fb565b886107fb565b61050a6104fc6104f687600161056e565b856107fb565b61029e6104958b60016107d7565b610829565b935084841115610535576001610525858761056e565b11610530575061055f565b61054c565b6001610541868661056e565b1161054c575061055f565b508061055781610b5e565b915050610421565b50909450505050505b92915050565b600061057e83831115600161086d565b600061058a8385610b47565b949350505050565b6000806105a08686516107fb565b90506000856000815181106105c557634e487b7160e01b600052603260045260246000fd5b6020026020010151905060006105f787518860008151811061045157634e487b7160e01b600052603260045260246000fd5b905060015b87518110156106755761063c61063661062f848b858151811061045157634e487b7160e01b600052603260045260246000fd5b8a516107fb565b8861087f565b91506106618882815181106103d257634e487b7160e01b600052603260045260246000fd5b92508061066d81610b5e565b9150506105fc565b506106b087868151811061069957634e487b7160e01b600052603260045260246000fd5b60200260200101518361056e90919063ffffffff16565b915060006106c76106c188896107fb565b85610829565b905061070d826107078a89815181106106f057634e487b7160e01b600052603260045260246000fd5b60200260200101518461089890919063ffffffff16565b906108fd565b9050600061072561071e8987610959565b85906107d7565b90506000806107456107378b856107d7565b6107078661029e8e80610898565b905060005b60ff8110156107c75781925061077a61076c8c6103988761029e8760026107fb565b6107078761029e8680610898565b91508282111561079f576001610790838561056e565b1161079a576107c7565b6107b5565b60016107ab848461056e565b116107b5576107c7565b806107bf81610b5e565b91505061074a565b509b9a5050505050505050505050565b6000806107e48385610af0565b90506107f484821015600061086d565b9392505050565b6000806108088385610b28565b90506107f48415806108225750836108208684610b08565b145b600361086d565b6000610838821515600461086d565b8261084557506000610568565b81610851600185610b47565b61085b9190610b08565b610866906001610af0565b9050610568565b8161087b5761087b816109ab565b5050565b600061088e821515600461086d565b6107f48284610b08565b6000806108a58385610b28565b90506108bd8415806108225750836108208684610b08565b806108cc576000915050610568565b670de0b6b3a76400006108e0600183610b47565b6108ea9190610b08565b6108f5906001610af0565b915050610568565b600061090c821515600461086d565b8261091957506000610568565b600061092d670de0b6b3a764000085610b28565b905061094d670de0b6b3a76400006109458684610b08565b14600561086d565b826108e0600183610b47565b6000610968821515600461086d565b8261097557506000610568565b6000610989670de0b6b3a764000085610b28565b90506109a1670de0b6b3a76400006109458684610b08565b6108f58382610b08565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b600060208284031215610a0f578081fd5b5035919050565b60008060008060808587031215610a2b578283fd5b8435935060208086013567ffffffffffffffff80821115610a4a578586fd5b818801915088601f830112610a5d578586fd5b813581811115610a6f57610a6f610b8f565b8060051b604051601f19603f83011681018181108582111715610a9457610a94610b8f565b604052828152858101935084860182860187018d1015610ab257898afd5b8995505b83861015610ad4578035855260019590950194938601938601610ab6565b50989b989a505050506040870135966060013595945050505050565b60008219821115610b0357610b03610b79565b500190565b600082610b2357634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610b4257610b42610b79565b500290565b600082821015610b5957610b59610b79565b500390565b6000600019821415610b7257610b72610b79565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212202b963b23a4cafa44a34b1708252aed53f058552a22af16734f61a56263f8672a64736f6c63430008040033";

export class StableSwap__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _amplificationParameter: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<StableSwap> {
    return super.deploy(
      _amplificationParameter,
      overrides || {}
    ) as Promise<StableSwap>;
  }
  getDeployTransaction(
    _amplificationParameter: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_amplificationParameter, overrides || {});
  }
  attach(address: string): StableSwap {
    return super.attach(address) as StableSwap;
  }
  connect(signer: Signer): StableSwap__factory {
    return super.connect(signer) as StableSwap__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StableSwapInterface {
    return new utils.Interface(_abi) as StableSwapInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StableSwap {
    return new Contract(address, _abi, signerOrProvider) as StableSwap;
  }
}
