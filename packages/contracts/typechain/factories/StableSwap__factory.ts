/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { StableSwap, StableSwapInterface } from "../StableSwap";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amplificationParameter",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "amplificationParameter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAmplificationParameter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "indexIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "indexOut",
        type: "uint256",
      },
    ],
    name: "onSwapGivenIn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "indexIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "indexOut",
        type: "uint256",
      },
    ],
    name: "onSwapGivenOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amplificationParameter",
        type: "uint256",
      },
    ],
    name: "updateAmplificationParameter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610c68380380610c6883398101604081905261002f916100c4565b3360601b608052610046600182101561012c61005f565b61005761138882111561012d61005f565b6000556100dc565b8161006d5761006d81610071565b5050565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b6000602082840312156100d5578081fd5b5051919050565b60805160601c610b6f6100f9600039600060f50152610b6f6000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80631cb2333d1461005c5780631ff3bc6b146100775780636daccffa1461008a57806377a743021461009257806397010c6f146100a5575b600080fd5b61006560005481565b60405190815260200160405180910390f35b6100656100853660046109aa565b6100ba565b600054610065565b6100656100a03660046109aa565b6100d8565b6100b86100b3366004610992565b6100ea565b005b6000806100cc6000548686868a610176565b9150505b949350505050565b6000806100cc6000548686868a6102ad565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101715760405162461bcd60e51b815260206004820152602260248201527f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f604482015261371760f11b606482015260840160405180910390fd5b600055565b600080610185878760016103c2565b90506101c1838786815181106101ab57634e487b7160e01b600052603260045260246000fd5b60200260200101516105d990919063ffffffff16565b8685815181106101e157634e487b7160e01b600052603260045260246000fd5b60200260200101818152505060006101fb888884896105ff565b90508387868151811061021e57634e487b7160e01b600052603260045260246000fd5b60200260200101516102309190610a84565b87868151811061025057634e487b7160e01b600052603260045260246000fd5b6020026020010181815250506102a1600161029b89898151811061028457634e487b7160e01b600052603260045260246000fd5b6020026020010151846105d990919063ffffffff16565b90610865565b98975050505050505050565b6000806102bc878760016103c2565b90506102f8838787815181106102e257634e487b7160e01b600052603260045260246000fd5b602002602001015161086590919063ffffffff16565b86868151811061031857634e487b7160e01b600052603260045260246000fd5b6020026020010181815250506000610332888884886105ff565b90508387878151811061035557634e487b7160e01b600052603260045260246000fd5b60200260200101516103679190610adb565b87878151811061038757634e487b7160e01b600052603260045260246000fd5b6020026020010181815250506102a160016103bc838a89815181106101ab57634e487b7160e01b600052603260045260246000fd5b906105d9565b81516000908190815b818110156104215761040d8682815181106103f657634e487b7160e01b600052603260045260246000fd5b60200260200101518461086590919063ffffffff16565b92508061041981610af2565b9150506103cb565b5081610432576000925050506105d2565b60008281610440848a610abc565b905060005b60ff8110156105c0576000858a60008151811061047257634e487b7160e01b600052603260045260246000fd5b60200260200101516104849190610abc565b905060015b868110156104e9576104d56104ce6104c8848e85815181106104bb57634e487b7160e01b600052603260045260246000fd5b6020026020010151610882565b89610882565b868c6108b0565b9150806104e181610af2565b915050610489565b5083945061055e610525610512610509610503878c610882565b85610882565b6103e88d6108b0565b61029b61051f8a89610882565b88610882565b61055861054a61054061053a6103e889610adb565b86610882565b6103e88e156108b0565b61029b6104c88b6001610a84565b8b6108b0565b93508484111561058d5760016105748686610adb565b1161058857839750505050505050506105d2565b6105ad565b60016105998587610adb565b116105ad57839750505050505050506105d2565b50806105b881610af2565b915050610445565b506105cc6101426108d0565b50505050505b9392505050565b60006105e9838311156001610923565b60006105f58385610adb565b9150505b92915050565b60008084518661060f9190610abc565b905060008560008151811061063457634e487b7160e01b600052603260045260246000fd5b60200260200101519050600086518760008151811061066357634e487b7160e01b600052603260045260246000fd5b60200260200101516106759190610abc565b905060015b87518110156106f3576106ba6106b46106ad848b85815181106104bb57634e487b7160e01b600052603260045260246000fd5b8a51610882565b88610935565b91506106df8882815181106103f657634e487b7160e01b600052603260045260246000fd5b9250806106eb81610af2565b91505061067a565b5086858151811061071457634e487b7160e01b600052603260045260246000fd5b6020026020010151826107279190610adb565b915060006107358788610882565b9050600061077a61075a6107528461074d8988610882565b61094e565b6103e8610882565b8a89815181106104bb57634e487b7160e01b600052603260045260246000fd5b9050600061079561078e6107528b89610935565b8690610865565b90506000806107b16107a78686610865565b61074d8d86610865565b905060005b60ff811015610849578192506107e66107d38661029b8586610882565b61074d8e6103bc8861029b886002610882565b9150828211156108165760016107fc8484610adb565b11610811575097506100d09650505050505050565b610837565b60016108228385610adb565b11610837575097506100d09650505050505050565b8061084181610af2565b9150506107b6565b506108556101426108d0565b5050505050505050949350505050565b6000806108728385610a84565b90506105d2848210156000610923565b60008061088f8385610abc565b90506105d28415806108a95750836108a78684610a9c565b145b6003610923565b6000816108c6576108c18484610935565b6100d0565b6100d0848461094e565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b8161093157610931816108d0565b5050565b60006109448215156004610923565b6105d28284610a9c565b600061095d8215156004610923565b8261096a575060006105f9565b81610976600185610adb565b6109809190610a9c565b61098b906001610a84565b90506105f9565b6000602082840312156109a3578081fd5b5035919050565b600080600080608085870312156109bf578283fd5b8435935060208086013567ffffffffffffffff808211156109de578586fd5b818801915088601f8301126109f1578586fd5b813581811115610a0357610a03610b23565b8060051b604051601f19603f83011681018181108582111715610a2857610a28610b23565b604052828152858101935084860182860187018d1015610a4657898afd5b8995505b83861015610a68578035855260019590950194938601938601610a4a565b50989b989a505050506040870135966060013595945050505050565b60008219821115610a9757610a97610b0d565b500190565b600082610ab757634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610ad657610ad6610b0d565b500290565b600082821015610aed57610aed610b0d565b500390565b6000600019821415610b0657610b06610b0d565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212201b260937e249e09819f67e911cf4fb83b884a2ccdb2a7f2a28f735335431e8bc64736f6c63430008040033";

export class StableSwap__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _amplificationParameter: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<StableSwap> {
    return super.deploy(
      _amplificationParameter,
      overrides || {}
    ) as Promise<StableSwap>;
  }
  getDeployTransaction(
    _amplificationParameter: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_amplificationParameter, overrides || {});
  }
  attach(address: string): StableSwap {
    return super.attach(address) as StableSwap;
  }
  connect(signer: Signer): StableSwap__factory {
    return super.connect(signer) as StableSwap__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StableSwapInterface {
    return new utils.Interface(_abi) as StableSwapInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StableSwap {
    return new Contract(address, _abi, signerOrProvider) as StableSwap;
  }
}
