/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FulfillInterpreter,
  FulfillInterpreterInterface,
} from "../FulfillInterpreter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "transactionManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "callTo",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "fallbackAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isContract",
        type: "bool",
      },
    ],
    name: "Executed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "c__0x96d668da",
        type: "bytes32",
      },
    ],
    name: "c_0x96d668da",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        internalType: "address payable",
        name: "callTo",
        type: "address",
      },
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "fallbackAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getTransactionManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506040516200240d3803806200240d833981810160405281019062000037919062000133565b6001600081905550620000737fdf86ba282d2c628f74ac3c9ee45a69034a7b4f6d6f2bdbc9c3a3dc2671e7183c60001b6200011960201b60201c565b620000a77f394e2a131b558f71ca1d5908f607a8b67bbd83a589c68018d5b5ef4aed6aa72860001b6200011960201b60201c565b620000db7f3517575fddedd2ba44e2f3b7b3f6937992dfcd4b905939e8cfeebacfcaa8199a60001b6200011960201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505050620001ad565b50565b6000815190506200012d8162000193565b92915050565b6000602082840312156200014657600080fd5b600062000156848285016200011c565b91505092915050565b60006200016c8262000173565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200019e816200015f565b8114620001aa57600080fd5b50565b60805160601c61223a620001d36000396000818161014a0152610225015261223a6000f3fe6080604052600436106100345760003560e01c80635c19b1711461003957806396f32fb814610062578063cf9a36041461008d575b600080fd5b34801561004557600080fd5b50610060600480360381019061005b91906117be565b6100bf565b005b34801561006e57600080fd5b506100776100c2565b6040516100849190611b8b565b60405180910390f35b6100a760048036038101906100a291906117e7565b61016e565b6040516100b693929190611c86565b60405180910390f35b50565b60006100f07ff00ec9bb645d7a3abe3db45952380561aa015ffeb00fbc935dbb0ff1d76a861b60001b6100bf565b61011c7f175c6ac5f2b7707eed8a6bc39bbfa3ab29efa4ba452cbfa388076bf7602bc59260001b6100bf565b6101487fabc11a964d1f3be9f81efe2323761e9b8e8d415b1a50478efe8352de3f0ebdb160001b6100bf565b7f0000000000000000000000000000000000000000000000000000000000000000905090565b600080606061019f7f822c46f161a8ab5f17500ecb057265308c2f61d2de64f56c937b9308ef354f0960001b6100bf565b6101cb7fdd9b443da27b9b140d34af130b09fe3626b6b47d1c03282d1c5face0e46373ca60001b6100bf565b6101f77fd377b5cceec64927bb52c84cb5a900be3795afc4252bbb981f9aedb88a74317560001b6100bf565b6102237fc64b362b512a1989da6cf0f6315a9c50d85a70d005e72767a2d125b3f46b2b6b60001b6100bf565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a890611da6565b60405180910390fd5b6102dd7f18d9ea10d2ac4f9ef2a47c4aa6db41f9c7e6d09b7a32e1cdbf4b5b8f833ce46160001b6100bf565b6103097fe7c2376ef0cd553172fc146a9e40ed913e844cdb8d819a33efa09371e1dd705760001b6100bf565b6103357f600e9c9edd740e3ffd1802210c1dc3fd9afef6096412cc6f052ab87a7cfafeb960001b6100bf565b6103617f327471a17357f64060089bf7297ca472e49f42b74bfc1cee803c87d332e1af4d60001b6100bf565b61038d7f20e838df38ed8c481a03af7710a277688a1670209e33413e51a7ad421b0e13e160001b6100bf565b600061039889610ab3565b90506103c67f8c97fa1328182c76eb48dd92f82c6aba1886e7579d78d7601337a86b4d0e158560001b6100bf565b6103f27f9c93f533288d96c5b41c19f3d05eeb6b2782f4100c6b43675e527f951b3bc69b60001b6100bf565b8061048b576104237fa9666af21a8daf50d2a9834c0ef7dd81941b585022cd2a2906833e819daf1dca60001b6100bf565b61044f7fb9d26b7825754f5fb0c13d747a20df1aa4fba7777fa4efbc4a874eba4362c4ee60001b6100bf565b61047b7f654d92d14579552bbc9bd050f2bf2e206e2de6330df5f7e30b79d3a091c3275e60001b6100bf565b610486898b89610b70565b6104b8565b6104b77f4b88bf5456a3eea61581fbe17ce9ef3e4d03fa3cce30b9d1f6fe0ae3f6f3fcbc60001b6100bf565b5b6104e47f2c250771d97c9e93d024fb80671c798385049fa510cf18b45fbd1965d38f748760001b6100bf565b6105107f82d39cfd58613374cbab2d0820060555b795142d347c6de75c28f05d3f8b840c60001b6100bf565b600061053e7f184eab58fd5d42d9b535982bc50ef520499a1f4f63e5fa0e06e1333f8d7337b960001b6100bf565b61056a7ff485b81f174f402eb2e22b198cf4d206386b6aa76343ca6cf4408f998bdfd1df60001b6100bf565b60606105987f43bd3472b631770005805969e95f79a8b583cd98d5892ab062a54ae55d44b66a60001b6100bf565b6105c47f7a99b3f21465b724e3139cc2020de0440c284b8bc99b4a11219cf89e53b8269860001b6100bf565b60006105cf8d610cfd565b90506105fd7f9311ea6b9ac89e83d4b9ba1d4435ff6e9cb4de01f9fa7aa80036de805bdbb59360001b6100bf565b6106297f4558eb6508bdaa574513f30b6f5ab524b00b98515cc53dc75faea7381bbef83960001b6100bf565b80156107385761065b7f6976d11686fd43a14d983fc702e43e4ebd0c0d8c7a37b39ac972e3f1389c1e6c60001b6100bf565b6106877f82b2a0b76cc251378dad459e4cad3b48eef03d0d64882a0a7fae20368ad8cb6560001b6100bf565b6106b37f721ddab6e35ac8b6cb2d636d105e4b7290c3547b2e05b1e335a0e10e637ae03160001b6100bf565b8c73ffffffffffffffffffffffffffffffffffffffff16846106d65760006106d8565b8a5b8a8a6040516106e8929190611b46565b60006040518083038185875af1925050503d8060008114610725576040519150601f19603f3d011682016040523d82523d6000602084013e61072a565b606091505b508093508194505050610765565b6107647f920e3ad2c6768ec651200985d5b2fac8c49feceb5478bc7f6c65e9dc741db9f460001b6100bf565b5b6107917f7138beaba7c68ff6b550d275f0be33b7c2da234fcb4a3c9e5495f7574000530b60001b6100bf565b6107bd7ff978a4521ec587dbfd1b9f6ed84c50e9eac4d7c81c4d6a3bb9998bde5d95574f60001b6100bf565b82610974576107ee7fad89780b30f6d759fa89557247dbc18f86e5ed58b6baefdf0ff2774c7ab9db6f60001b6100bf565b61081a7f9793f369aa6f029ff5ace4396198e9e38b23be7e97e558610da15d5beaccbeec60001b6100bf565b6108467fdcb8a9cf372d03b6e5585a07296ffabc283f3e93de025232565316f2013ff3e560001b6100bf565b6108518c8c8c610d10565b61087d7fe8ab800fa5814f8670c7886ff642d333451fad487b98ef282ce8aaec0e231de760001b6100bf565b6108a97f734751e02dfa419d4a198c9aaf4e42b08c9bf8c226043e1d1bf6a9475fe671ce60001b6100bf565b83610942576108da7fe805c0c93977d62c9ba8009a30d04570eccff45b7467684d3739ef2bbbc1ca1060001b6100bf565b6109067f03f44085d52be02d204316edd4886c50d1c13bf111eca4b4f7fac8d92ff50f1f60001b6100bf565b6109327f4696a5b5c86498c42d75270b36edd48e09ecdaa136e98e8bb2eb3b59d9ae097060001b6100bf565b61093d8c8e8c610dc1565b61096f565b61096e7fd2be1c35f87b84509b41654a413858de8240050cc323adbf0512d077178cdb3260001b6100bf565b5b6109a1565b6109a07f76e4569d9244da5f4300b7b295ae5211b968b3f3d98755bfba1d87b8111d53bf60001b6100bf565b5b6109cd7f5dd9a363c85c989bead5c399a638562732153835677031423b84a03555aaa36460001b6100bf565b6109f97f911a0d7e9f70418fcabe1d3984b8b2aedeb035f1356bf928d557508c3a79ee5760001b6100bf565b8d7f03196b76502b81bbf14393f8b5ed67dff323f1f86667b064820f1fdf293686a18e8e8e8e8e8e898b8a604051610a3999989796959493929190611ba6565b60405180910390a2610a6d7fafee41ec0c6dc266c021deae065098bc2b22e8afeeaba087fb3b591899bcf14860001b6100bf565b610a997f1f4d02e23c8aa465965012ede905641c3d65a924c56a55a11e54fef742664cb560001b6100bf565b828183965096509650505050509750975097945050505050565b6000610ae17f2e78e2b20f4fa5c2016c1254e29cbac64d266b4011d525f1834b19e838b5e5c760001b610f4e565b610b0d7f14c1004638878533f249b1fe6d03c945a36c2dde585a739e2f26d300484cb9df60001b610f4e565b610b397f930695e74b825ec90f6edfc161c25631097ae3a6745d8a8fc967fe98e1402b2860001b610f4e565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b610b9c7f03726f877c0bfac8e40c67233e702981ee5734eb72501c26673a15d0ff3ac68a60001b610f4e565b610bc87fc9d4c07f8bd2e7128ba53aba41b36f6b876898bb37a4ed57e7d1ff0893d62e2c60001b610f4e565b610bf47f344429a208d7d186b5ac8df38e7af561c982adf2bc7d1639b8e6ce02698d14f860001b610f4e565b610c207f4c98f7dfeab084bdb3e7ec25ae64db41b39196635b39e87bc14152e0bc9d4ec060001b610f4e565b610c2983610ab3565b15610c69576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6090611d66565b60405180910390fd5b610c957fdc6c99306d0b71f1ece8752419438092ca17ea1fd26a6825743f22d11fad8bac60001b610f4e565b610cc17f2cc3a860bf2e4e4f0de1bbf39a4e3c2e294f365fe1a55dc7d54b5a4e567448f260001b610f4e565b610ced7f44eec1f8aa02ec432d05fb6f72d0e71270a16e8d6cd6e6ead0ad1ec795df4a7360001b610f4e565b610cf8838383610f51565b505050565b600080823b905060008111915050919050565b610d3c7f0361bc3cfe3e9bcadc64d187a1d3fbd06766d28be4f6b3c8c0465a29db6e21c160001b610f4e565b610d687f9c261609e22f2b2694170a2f19e32891e275a3243604d56d79bfec9123c0511d60001b610f4e565b610d947faa80ec501b71eac9f1f97ad19807a884efc30ea9afda5afbb4ca0e638a5c8a4d60001b610f4e565b610d9d83610ab3565b610db157610dac838383611072565b610dbc565b610dbb8282611106565b5b505050565b610ded7f9aea87a02e8b14d5ad8eab50e2be99aaeb85b968a1dc82005e9149ffe5d7343360001b610f4e565b610e197fbac47c93c3bce67c1ddabfc95f224a517ad6c7febb3fc9986308f6eb966d81f560001b610f4e565b610e457f88531a7b4cef17eac9f40b3745aeef83247c3451bd6908558020024b85e21a9f60001b610f4e565b610e717fe0c60eb8bd77fa19b9761a5aafbd3cf7c4e7b7ca65fc402d47e621541db8539b60001b610f4e565b610e7a83610ab3565b15610eba576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eb190611d86565b60405180910390fd5b610ee67f4def5aa3065f7b64068e41306d0f3f2585105bfb1a48f5f7a105d2a3cd2ab50a60001b610f4e565b610f127fba85a8411c04e0f33d16acdfc1a6563182d58d7026c797f8e7619538e1536ea460001b610f4e565b610f3e7ffa5820c4a62dc662b2f0bd3cd6eeb66381055a9aa2a0e4864b1e6fc18261169f60001b610f4e565b610f49838383611198565b505050565b50565b6000818473ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30866040518363ffffffff1660e01b8152600401610f8f929190611c34565b60206040518083038186803b158015610fa757600080fd5b505afa158015610fbb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fdf919061188e565b610fe99190611e49565b905061106c8463095ea7b360e01b858460405160240161100a929190611c5d565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506112f9565b50505050565b61109e7fb3ab0fd29525aa6d47be05ecca461b324b90fab99486115b61b2170a0812eb8260001b610f4e565b6110ca7f290ea3849dc8ae4a2034ce65d5cac6d2fa20f140019006dab1e0e1deeeb5fa9460001b610f4e565b6110f67fe167fb1ea6b5c822a858dd848f0f0f12de27250930d40fc9d1987222b30cec9960001b610f4e565b6111018383836113c0565b505050565b6111327f7f2d1df46136abf9cb14ba3552dbf89d6d940ffc4c7207f7f01865545e49298060001b610f4e565b61115e7fbe763141299da4b55a00ee46d5474372508a17625e1487f830f052a001d0a60f60001b610f4e565b61118a7febd817447ccc8bcca754e09f8ac4922d6db08b94760247424d169a3a889d719660001b610f4e565b6111948282611446565b5050565b60008373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30856040518363ffffffff1660e01b81526004016111d5929190611c34565b60206040518083038186803b1580156111ed57600080fd5b505afa158015611201573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611225919061188e565b90508181101561126a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161126190611ce6565b60405180910390fd5b600082820390506112f28563095ea7b360e01b8684604051602401611290929190611c5d565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506112f9565b5050505050565b600061135b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661153a9092919063ffffffff16565b90506000815111156113bb578080602001905181019061137b9190611795565b6113ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113b190611de6565b60405180910390fd5b5b505050565b6114418363a9059cbb60e01b84846040516024016113df929190611c5d565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506112f9565b505050565b80471015611489576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161148090611d26565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff16826040516114af90611b76565b60006040518083038185875af1925050503d80600081146114ec576040519150601f19603f3d011682016040523d82523d6000602084013e6114f1565b606091505b5050905080611535576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161152c90611d06565b60405180910390fd5b505050565b60606115498484600085611552565b90509392505050565b606082471015611597576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161158e90611d46565b60405180910390fd5b6115a085610cfd565b6115df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115d690611dc6565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516116089190611b5f565b60006040518083038185875af1925050503d8060008114611645576040519150601f19603f3d011682016040523d82523d6000602084013e61164a565b606091505b509150915061165a828286611666565b92505050949350505050565b60608315611676578290506116c6565b6000835111156116895782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116bd9190611cc4565b60405180910390fd5b9392505050565b6000813590506116dc81612191565b92915050565b6000813590506116f1816121a8565b92915050565b600081519050611706816121bf565b92915050565b60008135905061171b816121d6565b92915050565b60008083601f84011261173357600080fd5b8235905067ffffffffffffffff81111561174c57600080fd5b60208301915083600182028301111561176457600080fd5b9250929050565b60008135905061177a816121ed565b92915050565b60008151905061178f816121ed565b92915050565b6000602082840312156117a757600080fd5b60006117b5848285016116f7565b91505092915050565b6000602082840312156117d057600080fd5b60006117de8482850161170c565b91505092915050565b600080600080600080600060c0888a03121561180257600080fd5b60006118108a828b0161170c565b97505060206118218a828b016116e2565b96505060406118328a828b016116cd565b95505060606118438a828b016116e2565b94505060806118548a828b0161176b565b93505060a088013567ffffffffffffffff81111561187157600080fd5b61187d8a828b01611721565b925092505092959891949750929550565b6000602082840312156118a057600080fd5b60006118ae84828501611780565b91505092915050565b6118c081611eb1565b82525050565b6118cf81611e9f565b82525050565b6118de81611ec3565b82525050565b60006118f08385611e1c565b93506118fd838584611f03565b61190683611f74565b840190509392505050565b600061191d8385611e2d565b935061192a838584611f03565b82840190509392505050565b600061194182611e06565b61194b8185611e1c565b935061195b818560208601611f12565b61196481611f74565b840191505092915050565b600061197a82611e06565b6119848185611e2d565b9350611994818560208601611f12565b80840191505092915050565b60006119ab82611e11565b6119b58185611e38565b93506119c5818560208601611f12565b6119ce81611f74565b840191505092915050565b60006119e6602983611e38565b91506119f182611f85565b604082019050919050565b6000611a09603a83611e38565b9150611a1482611fd4565b604082019050919050565b6000611a2c601d83611e38565b9150611a3782612023565b602082019050919050565b6000611a4f602683611e38565b9150611a5a8261204c565b604082019050919050565b6000611a72600783611e38565b9150611a7d8261209b565b602082019050919050565b6000611a95600783611e38565b9150611aa0826120c4565b602082019050919050565b6000611ab8600883611e38565b9150611ac3826120ed565b602082019050919050565b6000611adb600083611e2d565b9150611ae682612116565b600082019050919050565b6000611afe601d83611e38565b9150611b0982612119565b602082019050919050565b6000611b21602a83611e38565b9150611b2c82612142565b604082019050919050565b611b4081611ef9565b82525050565b6000611b53828486611911565b91508190509392505050565b6000611b6b828461196f565b915081905092915050565b6000611b8182611ace565b9150819050919050565b6000602082019050611ba060008301846118c6565b92915050565b600061010082019050611bbc600083018c6118b7565b611bc9602083018b6118c6565b611bd6604083018a6118b7565b611be36060830189611b37565b8181036080830152611bf68187896118e4565b905081810360a0830152611c0a8186611936565b9050611c1960c08301856118d5565b611c2660e08301846118d5565b9a9950505050505050505050565b6000604082019050611c4960008301856118c6565b611c5660208301846118c6565b9392505050565b6000604082019050611c7260008301856118c6565b611c7f6020830184611b37565b9392505050565b6000606082019050611c9b60008301866118d5565b611ca860208301856118d5565b8181036040830152611cba8184611936565b9050949350505050565b60006020820190508181036000830152611cde81846119a0565b905092915050565b60006020820190508181036000830152611cff816119d9565b9050919050565b60006020820190508181036000830152611d1f816119fc565b9050919050565b60006020820190508181036000830152611d3f81611a1f565b9050919050565b60006020820190508181036000830152611d5f81611a42565b9050919050565b60006020820190508181036000830152611d7f81611a65565b9050919050565b60006020820190508181036000830152611d9f81611a88565b9050919050565b60006020820190508181036000830152611dbf81611aab565b9050919050565b60006020820190508181036000830152611ddf81611af1565b9050919050565b60006020820190508181036000830152611dff81611b14565b9050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b6000611e5482611ef9565b9150611e5f83611ef9565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611e9457611e93611f45565b5b828201905092915050565b6000611eaa82611ed9565b9050919050565b6000611ebc82611ed9565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611f30578082015181840152602081019050611f15565b83811115611f3f576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f8301169050919050565b7f5361666545524332303a2064656372656173656420616c6c6f77616e6365206260008201527f656c6f77207a65726f0000000000000000000000000000000000000000000000602082015250565b7f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260008201527f6563697069656e74206d61792068617665207265766572746564000000000000602082015250565b7f416464726573733a20696e73756666696369656e742062616c616e6365000000600082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f2349413a30333400000000000000000000000000000000000000000000000000600082015250565b7f2344413a30333400000000000000000000000000000000000000000000000000600082015250565b7f234f544d3a303237000000000000000000000000000000000000000000000000600082015250565b50565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b61219a81611e9f565b81146121a557600080fd5b50565b6121b181611eb1565b81146121bc57600080fd5b50565b6121c881611ec3565b81146121d357600080fd5b50565b6121df81611ecf565b81146121ea57600080fd5b50565b6121f681611ef9565b811461220157600080fd5b5056fea264697066735822122004ea074e8b00146f35f1c028048c881305c1a4832cd1a309216e8d6c826ed3ae64736f6c63430008040033";

export class FulfillInterpreter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    transactionManager: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FulfillInterpreter> {
    return super.deploy(
      transactionManager,
      overrides || {}
    ) as Promise<FulfillInterpreter>;
  }
  getDeployTransaction(
    transactionManager: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(transactionManager, overrides || {});
  }
  attach(address: string): FulfillInterpreter {
    return super.attach(address) as FulfillInterpreter;
  }
  connect(signer: Signer): FulfillInterpreter__factory {
    return super.connect(signer) as FulfillInterpreter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FulfillInterpreterInterface {
    return new utils.Interface(_abi) as FulfillInterpreterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FulfillInterpreter {
    return new Contract(address, _abi, signerOrProvider) as FulfillInterpreter;
  }
}
