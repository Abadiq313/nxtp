/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FulfillInterpreter,
  FulfillInterpreterInterface,
} from "../FulfillInterpreter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "transactionManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "callTo",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "fallbackAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isContract",
        type: "bool",
      },
    ],
    name: "Executed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "c__0x67399a10",
        type: "bytes32",
      },
    ],
    name: "c_0x67399a10",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        internalType: "address payable",
        name: "callTo",
        type: "address",
      },
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "fallbackAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getTransactionManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506040516200240d3803806200240d833981810160405281019062000037919062000133565b6001600081905550620000737f389746ee67d163c6536902b0104d6ac487ea38602121ecaa78773c6b65fd631560001b6200011960201b60201c565b620000a77fdee45ad47fe7b3fdbfe7cda6f8729171ff6560075c150350c8e22d093824fe1960001b6200011960201b60201c565b620000db7fa755660ab86b7a7996ad71e8e48cfe0ede2d82a36a214cc2af0d5247e4a44f1460001b6200011960201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505050620001ad565b50565b6000815190506200012d8162000193565b92915050565b6000602082840312156200014657600080fd5b600062000156848285016200011c565b91505092915050565b60006200016c8262000173565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200019e816200015f565b8114620001aa57600080fd5b50565b60805160601c61223a620001d36000396000818161014a0152610225015261223a6000f3fe6080604052600436106100345760003560e01c806387b672271461003957806396f32fb814610062578063cf9a36041461008d575b600080fd5b34801561004557600080fd5b50610060600480360381019061005b91906117be565b6100bf565b005b34801561006e57600080fd5b506100776100c2565b6040516100849190611b8b565b60405180910390f35b6100a760048036038101906100a291906117e7565b61016e565b6040516100b693929190611c86565b60405180910390f35b50565b60006100f07f525d18b526d24703d7f6eaee5fde6d3c6451140da2fc577e86f25ee22a62930560001b6100bf565b61011c7f9c7f989e684788ad0ab11534b6911b214712f6f69d17f6f7a7fc5ed31c841c9860001b6100bf565b6101487fc565b661ab8c08d11525d80900f8137c38bce32079c20d6dc84aeb69043f349660001b6100bf565b7f0000000000000000000000000000000000000000000000000000000000000000905090565b600080606061019f7f1233478d45c22d7cd10abdb57d3ad6dcfa813a9e2d4febf62af071d3c182444260001b6100bf565b6101cb7f1b1862b3e1bf2257409a79fb3efd2a583a938eb138d0f508da4df2dfb9e4965660001b6100bf565b6101f77f5cf75a8912cc6c288da0e7dc3ffa0f1b834c96369134a71890a77eff29d69aea60001b6100bf565b6102237fbc473e8095f1071b2c0c235d1f2a66c493802b68df8938896531545b8345edae60001b6100bf565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a890611da6565b60405180910390fd5b6102dd7f7ec74ca8f2ab455968aadf6076e8a1cc16270dbf65af063e906166ae46f041e660001b6100bf565b6103097fc24b9434cc3dfa02ac90cffbe6cca6e706752208bd9e8aa2c5124ef521a60a8f60001b6100bf565b6103357f4cc67414bcf31e21f91707c090ad1ab28fafd048ae97694b54b00782a2f2fd2a60001b6100bf565b6103617fd533b2d0829ea4d3dfd84c5352df2ab9173a770971662dfdf1decd0b3411f73060001b6100bf565b61038d7f49ed83daa77b96185b1e556151a572b18efc9248d654bf081979a55d61da855e60001b6100bf565b600061039889610ab3565b90506103c67f0911fddea80744b88a5c780732289684a1f8c161b7c988071d1554237951bde260001b6100bf565b6103f27f5ba99dcd34fcb350d846a26a94f0c6d1b353d32e6b7d7b30f5a8c4fdc69e75cc60001b6100bf565b8061048b576104237fcb153ad736fd013d4c39c478497503e3974749c56d5f91e96430d3038156bd9c60001b6100bf565b61044f7fb951c98dd92807d6d0a187b401ebf3a4eb286ccb536a1c59525d5c75bf3adf2460001b6100bf565b61047b7f76cd589dd3c229e5900ebaa1c441ea1903b113caf4f427482c8bc78cb594c09060001b6100bf565b610486898b89610b70565b6104b8565b6104b77f2d1c4decf9fd8017ab5f5db1493fdb9857755490e3bfe04c5685eb4d799b9c0060001b6100bf565b5b6104e47f9f6b785bc4ea57ad698c338e9b25a1bc5cf7e837a33065982033a82f1e4a199c60001b6100bf565b6105107f5840fc1df44b1953ceb6c8b2043f371a9c0eaec162486f82336f913f187a0bde60001b6100bf565b600061053e7ffb165215a4767c3c5e4667946f022f3f962107180c649c8b74cf99ac4d36385b60001b6100bf565b61056a7f5bcefd874d60f1c7e9661e55ca5dbb3d9cd8ebb55f88de3857de0b7d6a3883e460001b6100bf565b60606105987fcbc7d4e24a1fac4e816c8b1d2304f11e78b3c4d136d36849100eac948743edf960001b6100bf565b6105c47fa19d572c8f129f1a3ab95761079b8fed40d580c225baf14fbfb13c155e4f5b6660001b6100bf565b60006105cf8d610cfd565b90506105fd7fb2d4917ed378cece7cb8b057cda58ee6facc44398e3e51900fba41bc30147cf660001b6100bf565b6106297fb6179eff3bf8ca97fc2cc6537bbd33e520ac74a05b69e15125943092eb9c5c0b60001b6100bf565b80156107385761065b7fe35d060072ce5cbceb36ebe37c139b4f48433f67bd9df38fd14d2223434bad9960001b6100bf565b6106877f4acc23960496c65227ac7ac92d3c3c116dfd5a5e476161d9af2af44ba338217860001b6100bf565b6106b37f6b9405cde205d96979c7e685d7b5f4b7d06ec289d3a00362bb19ba064b4b199060001b6100bf565b8c73ffffffffffffffffffffffffffffffffffffffff16846106d65760006106d8565b8a5b8a8a6040516106e8929190611b46565b60006040518083038185875af1925050503d8060008114610725576040519150601f19603f3d011682016040523d82523d6000602084013e61072a565b606091505b508093508194505050610765565b6107647f58d12e846370acc86b431e8308990db98477c68f9554db0f1e1d10a17bab12e360001b6100bf565b5b6107917f4bf2bab57806ea718c2f0d459fbe76c798f1fe0ed7b13bd76d7699876ebe569560001b6100bf565b6107bd7f74a7c79130fcbff887765fc70bafe9fb42957325e226790fb914332482cc91d460001b6100bf565b82610974576107ee7f2f04dc01ff2d9e75c9f230c5bd5d567b10c3814b5f1e2b4eb6eaabf47dfb6ba960001b6100bf565b61081a7f041ff7d0d3cf05f31669857462273700124de3954de3d1a9d1075c34950e982460001b6100bf565b6108467fc6dbdbd8a0f007ab93170a5101f265835003883c2ce06b3e68d3418a72ffdce960001b6100bf565b6108518c8c8c610d10565b61087d7fc3dd825c629e187956addef50faaba27387839023cbc55e4e8ded0c5301ee72060001b6100bf565b6108a97ff6484fed0c228e7b5d51dd7e8a446add86d2abc1c0ea1bbe5b69679cb762727560001b6100bf565b83610942576108da7f3f9860ffe34c814aecd63322441befb33e2394220e72933072ecd6aa25a90f2060001b6100bf565b6109067f1e36d53ea0b9cde6c00d9aed0d6405c090ab58a4fdb21f87d901bde3f3a4d4a460001b6100bf565b6109327f65e41ddca0150e0a239d9f39b3c121cc871a6f578e71b470b6b9255e7e45fcfd60001b6100bf565b61093d8c8e8c610dc1565b61096f565b61096e7f9ae922843b97e36b3931eae12924a7cf662867617fdddccdff54d649bdb0c58160001b6100bf565b5b6109a1565b6109a07f51adc211ea4785ea187373b3de95a19dd72c6f1e33dd82add7c258f3cf5e9eaa60001b6100bf565b5b6109cd7ff4c367be18f7795c0d4d8c939e28d73516ec797f11e607d628a9953111d006f160001b6100bf565b6109f97f043c95719fb64f5169fc8c6830e4112ad7f43faf4009815b2af8208a37f4ca9160001b6100bf565b8d7f03196b76502b81bbf14393f8b5ed67dff323f1f86667b064820f1fdf293686a18e8e8e8e8e8e898b8a604051610a3999989796959493929190611ba6565b60405180910390a2610a6d7f36f96f8e262119e8d043244806745190f6584f651a9cc2984d18d70fd18238f760001b6100bf565b610a997fbe0d418fac81c0c4a9b9e844886ffd7b799d0fd1cf15854942f6dfa5993d13c960001b6100bf565b828183965096509650505050509750975097945050505050565b6000610ae17f8697982f3a7da667345a719053ee843156527bce75aa265604dfc2456ff6a47760001b610f4e565b610b0d7ff396d7d6f9f78e16f352952b32f373337cec476d0f135098717c37f0421e708360001b610f4e565b610b397f2ee1ff8650ad688b676028cd54f8acf8b62398d61b147c74235d09d3a015ecd760001b610f4e565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b610b9c7f08aa8259e1987490abb06576f2d637d8750013f2dd374fdd70fdc24633bfc27960001b610f4e565b610bc87f06748802cf05d2c8d958d47082946a9ce16aa76b06c12e5ea8e900787bc9348560001b610f4e565b610bf47feabb67e6b9904c6fc69fddd7e52742945cc4d980193de9e210dc0b7a60e5486160001b610f4e565b610c207fd25da3132c52d0d2f1509bb3228eb4d85dd8e47a0d491504876a6a486b17320a60001b610f4e565b610c2983610ab3565b15610c69576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6090611d66565b60405180910390fd5b610c957f250e1e2438acf181b2df7e3a070965b2a9c46578f4684198a72238892157fd7c60001b610f4e565b610cc17fd2d66c0f229fc481e3547c8b9b6c84c617451e859e83c0ce5690b49d54aa273760001b610f4e565b610ced7fafc391b4596ca4abffe7017c86fd8e7e03838cb71f6bc974e9750a8877d7d11360001b610f4e565b610cf8838383610f51565b505050565b600080823b905060008111915050919050565b610d3c7fef18de95983b3ef458c4288e4b7b5520469140897c8092f2d6f17bc57a6dd10c60001b610f4e565b610d687f2d774ad1fd56ec164021419f7ffbb6be8a68ee968ecb979979eb1b5b176f76eb60001b610f4e565b610d947f1374f28f8cf5b769043361d5b0b545bbae69a9d84794e44f727f8f53eb011a6260001b610f4e565b610d9d83610ab3565b610db157610dac838383611072565b610dbc565b610dbb8282611106565b5b505050565b610ded7f312673f3c38131f5c29e93f5ecf440e7a64cc6f637688b093fd7eac52935d3a560001b610f4e565b610e197fc67b942459b7a21d081b2104b5b3268a8808670ee7c7c967a4426552d6d3743660001b610f4e565b610e457f7a75697b1cf2ec5530db5f0da4ff8b98bf7f1dae2c12e04c0b5528189d1f6b4f60001b610f4e565b610e717fc5d3ec9274ff0224fe2d6148dad2f19ed6d91ec82b804b3213c779ea8540724060001b610f4e565b610e7a83610ab3565b15610eba576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eb190611d86565b60405180910390fd5b610ee67fdc47cbb8f3d496450f52d6d47ebdf18865375774798d2f2a76e897badc81b32660001b610f4e565b610f127fa85d61f33ca78d4d9f5ee277116cc5298061b2c1f052184586e3cda56329c5c460001b610f4e565b610f3e7f11656750e665d5045b39fa1694625743f6655a96f9cbef6240c18a6399541f6860001b610f4e565b610f49838383611198565b505050565b50565b6000818473ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30866040518363ffffffff1660e01b8152600401610f8f929190611c34565b60206040518083038186803b158015610fa757600080fd5b505afa158015610fbb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fdf919061188e565b610fe99190611e49565b905061106c8463095ea7b360e01b858460405160240161100a929190611c5d565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506112f9565b50505050565b61109e7f74c820258315e0d061430fc4b63295923bd699551709b2901510f32af7f4d75060001b610f4e565b6110ca7f48cd9ab60815460314688df66e5c9e8a56e5a6f5f6c2782ae23dee7c67cc405a60001b610f4e565b6110f67f8cd7887fa1d6ac3424de5f4dbf0bdf567d242015aef9b1f593cb6eb86832ba7560001b610f4e565b6111018383836113c0565b505050565b6111327f1759263802dbaaf404fc5b3258ab184f1306771d02fc02909b248d0755c7b6bc60001b610f4e565b61115e7f8c4de2ca3eb1e9c50472a064a8c5ca5439889bcbbb6879a5331cd92af5e2889860001b610f4e565b61118a7f7ba96828364ffaad0f46b3c5ed695d2c42e3d0c883f7774d20c945096ce99f0d60001b610f4e565b6111948282611446565b5050565b60008373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30856040518363ffffffff1660e01b81526004016111d5929190611c34565b60206040518083038186803b1580156111ed57600080fd5b505afa158015611201573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611225919061188e565b90508181101561126a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161126190611ce6565b60405180910390fd5b600082820390506112f28563095ea7b360e01b8684604051602401611290929190611c5d565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506112f9565b5050505050565b600061135b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661153a9092919063ffffffff16565b90506000815111156113bb578080602001905181019061137b9190611795565b6113ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113b190611de6565b60405180910390fd5b5b505050565b6114418363a9059cbb60e01b84846040516024016113df929190611c5d565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506112f9565b505050565b80471015611489576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161148090611d26565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff16826040516114af90611b76565b60006040518083038185875af1925050503d80600081146114ec576040519150601f19603f3d011682016040523d82523d6000602084013e6114f1565b606091505b5050905080611535576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161152c90611d06565b60405180910390fd5b505050565b60606115498484600085611552565b90509392505050565b606082471015611597576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161158e90611d46565b60405180910390fd5b6115a085610cfd565b6115df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115d690611dc6565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516116089190611b5f565b60006040518083038185875af1925050503d8060008114611645576040519150601f19603f3d011682016040523d82523d6000602084013e61164a565b606091505b509150915061165a828286611666565b92505050949350505050565b60608315611676578290506116c6565b6000835111156116895782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116bd9190611cc4565b60405180910390fd5b9392505050565b6000813590506116dc81612191565b92915050565b6000813590506116f1816121a8565b92915050565b600081519050611706816121bf565b92915050565b60008135905061171b816121d6565b92915050565b60008083601f84011261173357600080fd5b8235905067ffffffffffffffff81111561174c57600080fd5b60208301915083600182028301111561176457600080fd5b9250929050565b60008135905061177a816121ed565b92915050565b60008151905061178f816121ed565b92915050565b6000602082840312156117a757600080fd5b60006117b5848285016116f7565b91505092915050565b6000602082840312156117d057600080fd5b60006117de8482850161170c565b91505092915050565b600080600080600080600060c0888a03121561180257600080fd5b60006118108a828b0161170c565b97505060206118218a828b016116e2565b96505060406118328a828b016116cd565b95505060606118438a828b016116e2565b94505060806118548a828b0161176b565b93505060a088013567ffffffffffffffff81111561187157600080fd5b61187d8a828b01611721565b925092505092959891949750929550565b6000602082840312156118a057600080fd5b60006118ae84828501611780565b91505092915050565b6118c081611eb1565b82525050565b6118cf81611e9f565b82525050565b6118de81611ec3565b82525050565b60006118f08385611e1c565b93506118fd838584611f03565b61190683611f74565b840190509392505050565b600061191d8385611e2d565b935061192a838584611f03565b82840190509392505050565b600061194182611e06565b61194b8185611e1c565b935061195b818560208601611f12565b61196481611f74565b840191505092915050565b600061197a82611e06565b6119848185611e2d565b9350611994818560208601611f12565b80840191505092915050565b60006119ab82611e11565b6119b58185611e38565b93506119c5818560208601611f12565b6119ce81611f74565b840191505092915050565b60006119e6602983611e38565b91506119f182611f85565b604082019050919050565b6000611a09603a83611e38565b9150611a1482611fd4565b604082019050919050565b6000611a2c601d83611e38565b9150611a3782612023565b602082019050919050565b6000611a4f602683611e38565b9150611a5a8261204c565b604082019050919050565b6000611a72600783611e38565b9150611a7d8261209b565b602082019050919050565b6000611a95600783611e38565b9150611aa0826120c4565b602082019050919050565b6000611ab8600883611e38565b9150611ac3826120ed565b602082019050919050565b6000611adb600083611e2d565b9150611ae682612116565b600082019050919050565b6000611afe601d83611e38565b9150611b0982612119565b602082019050919050565b6000611b21602a83611e38565b9150611b2c82612142565b604082019050919050565b611b4081611ef9565b82525050565b6000611b53828486611911565b91508190509392505050565b6000611b6b828461196f565b915081905092915050565b6000611b8182611ace565b9150819050919050565b6000602082019050611ba060008301846118c6565b92915050565b600061010082019050611bbc600083018c6118b7565b611bc9602083018b6118c6565b611bd6604083018a6118b7565b611be36060830189611b37565b8181036080830152611bf68187896118e4565b905081810360a0830152611c0a8186611936565b9050611c1960c08301856118d5565b611c2660e08301846118d5565b9a9950505050505050505050565b6000604082019050611c4960008301856118c6565b611c5660208301846118c6565b9392505050565b6000604082019050611c7260008301856118c6565b611c7f6020830184611b37565b9392505050565b6000606082019050611c9b60008301866118d5565b611ca860208301856118d5565b8181036040830152611cba8184611936565b9050949350505050565b60006020820190508181036000830152611cde81846119a0565b905092915050565b60006020820190508181036000830152611cff816119d9565b9050919050565b60006020820190508181036000830152611d1f816119fc565b9050919050565b60006020820190508181036000830152611d3f81611a1f565b9050919050565b60006020820190508181036000830152611d5f81611a42565b9050919050565b60006020820190508181036000830152611d7f81611a65565b9050919050565b60006020820190508181036000830152611d9f81611a88565b9050919050565b60006020820190508181036000830152611dbf81611aab565b9050919050565b60006020820190508181036000830152611ddf81611af1565b9050919050565b60006020820190508181036000830152611dff81611b14565b9050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b6000611e5482611ef9565b9150611e5f83611ef9565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611e9457611e93611f45565b5b828201905092915050565b6000611eaa82611ed9565b9050919050565b6000611ebc82611ed9565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611f30578082015181840152602081019050611f15565b83811115611f3f576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f8301169050919050565b7f5361666545524332303a2064656372656173656420616c6c6f77616e6365206260008201527f656c6f77207a65726f0000000000000000000000000000000000000000000000602082015250565b7f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260008201527f6563697069656e74206d61792068617665207265766572746564000000000000602082015250565b7f416464726573733a20696e73756666696369656e742062616c616e6365000000600082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f2349413a30333400000000000000000000000000000000000000000000000000600082015250565b7f2344413a30333400000000000000000000000000000000000000000000000000600082015250565b7f234f544d3a303237000000000000000000000000000000000000000000000000600082015250565b50565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b61219a81611e9f565b81146121a557600080fd5b50565b6121b181611eb1565b81146121bc57600080fd5b50565b6121c881611ec3565b81146121d357600080fd5b50565b6121df81611ecf565b81146121ea57600080fd5b50565b6121f681611ef9565b811461220157600080fd5b5056fea264697066735822122055ba43a40657ee4af715c3d594154854c344e408eacb5e7e918e773b9c65eaa664736f6c63430008040033";

export class FulfillInterpreter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    transactionManager: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FulfillInterpreter> {
    return super.deploy(
      transactionManager,
      overrides || {}
    ) as Promise<FulfillInterpreter>;
  }
  getDeployTransaction(
    transactionManager: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(transactionManager, overrides || {});
  }
  attach(address: string): FulfillInterpreter {
    return super.attach(address) as FulfillInterpreter;
  }
  connect(signer: Signer): FulfillInterpreter__factory {
    return super.connect(signer) as FulfillInterpreter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FulfillInterpreterInterface {
    return new utils.Interface(_abi) as FulfillInterpreterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FulfillInterpreter {
    return new Contract(address, _abi, signerOrProvider) as FulfillInterpreter;
  }
}
