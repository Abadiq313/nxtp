/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SignatureInterpreter,
  SignatureInterpreterInterface,
} from "../SignatureInterpreter";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "receivingChainCondition",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingChainCondition",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingChainTxManagerAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "address",
            name: "router",
            type: "address",
          },
          {
            internalType: "address",
            name: "initiator",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingChainFallback",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "callTo",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "callDataHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "sendingChainId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "receivingChainId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preparedBlockNumber",
            type: "uint256",
          },
        ],
        internalType: "struct TransactionData",
        name: "txData",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "unlockData",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
    ],
    name: "shouldCancel",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "receivingChainCondition",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingChainCondition",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingChainTxManagerAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "address",
            name: "router",
            type: "address",
          },
          {
            internalType: "address",
            name: "initiator",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingChainFallback",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "callTo",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "callDataHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "sendingChainId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "receivingChainId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preparedBlockNumber",
            type: "uint256",
          },
        ],
        internalType: "struct TransactionData",
        name: "txData",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "unlockData",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "relayerFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
    ],
    name: "shouldFulfill",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506107a4806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806357f6ef7e1461003b578063b3dff02f14610062575b600080fd5b61004e61004936600461060f565b610075565b604051901515815260200160405180910390f35b61004e6100703660046105b3565b6100c4565b60008061009a610180880135858561009360608c0160408d01610585565b8a8a610111565b90506100ac6080880160608901610585565b6001600160a01b039182169116149695505050505050565b6000806100e8610180870135846100e160608a0160408b01610585565b8888610191565b90506100fa6080870160608801610585565b6001600160a01b0391821691161495945050505050565b6040805160a0810182528781526020808201889052825180840184526007815266199d5b199a5b1b60ca1b8183015282840152606082018790526001600160a01b038616608083015291516000926101859161016f91849101610713565b60405160208183030381529060405285856101fd565b98975050505050505050565b60008060405180608001604052808881526020016040518060400160405280600681526020016518d85b98d95b60d21b8152508152602001878152602001866001600160a01b031681525090506101f28160405160200161016f91906106c2565b979650505050505050565b600061029c61026085805190602001206040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b84848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506102a492505050565b949350505050565b60008151604114156102d85760208201516040830151606084015160001a6102ce86828585610353565b935050505061034d565b81516040141561030057602082015160408301516102f78583836104fc565b9250505061034d565b60405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064015b60405180910390fd5b92915050565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211156103d05760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610344565b8360ff16601b14806103e557508360ff16601c145b61043c5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610344565b6040805160008082526020820180845288905260ff871692820192909252606081018590526080810184905260019060a0016020604051602081039080840390855afa158015610490573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166104f35760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610344565b95945050505050565b60006001600160ff1b03821660ff83901c601b0161051c86828785610353565b9695505050505050565b60008083601f840112610537578182fd5b50813567ffffffffffffffff81111561054e578182fd5b60208301915083602082850101111561056657600080fd5b9250929050565b6000610240828403121561057f578081fd5b50919050565b600060208284031215610596578081fd5b81356001600160a01b03811681146105ac578182fd5b9392505050565b60008060008061028085870312156105c9578283fd5b6105d3868661056d565b935061024085013567ffffffffffffffff8111156105ef578384fd5b6105fb87828801610526565b959890975094956102600135949350505050565b60008060008060006102a08688031215610627578081fd5b610631878761056d565b945061024086013567ffffffffffffffff81111561064d578182fd5b61065988828901610526565b96999098509596610260810135966102809091013595509350505050565b60008151808452815b8181101561069c57602081850181015186830182015201610680565b818111156106ad5782602083870101525b50601f01601f19169290920160200192915050565b602081528151602082015260006020830151608060408401526106e860a0840182610677565b6040850151606085810191909152909401516001600160a01b03166080909301929092525090919050565b6020815281516020820152602082015160408201526000604083015160a0606084015261074360c0840182610677565b6060850151608085810191909152909401516001600160a01b031660a090930192909252509091905056fea26469706673582212208e51f78615375e545a86327d5b7094dd2451ef9c1d9c0922b4606ccb74621ae764736f6c63430008040033";

export class SignatureInterpreter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SignatureInterpreter> {
    return super.deploy(overrides || {}) as Promise<SignatureInterpreter>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SignatureInterpreter {
    return super.attach(address) as SignatureInterpreter;
  }
  connect(signer: Signer): SignatureInterpreter__factory {
    return super.connect(signer) as SignatureInterpreter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SignatureInterpreterInterface {
    return new utils.Interface(_abi) as SignatureInterpreterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SignatureInterpreter {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SignatureInterpreter;
  }
}
