/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SignatureInterpreter,
  SignatureInterpreterInterface,
} from "../SignatureInterpreter";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "c__0x75ad0c4c",
        type: "bytes32",
      },
    ],
    name: "c_0x75ad0c4c",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "receivingChainCondition",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingChainCondition",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingChainTxManagerAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "address",
            name: "router",
            type: "address",
          },
          {
            internalType: "address",
            name: "initiator",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingChainFallback",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "callTo",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "callDataHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "encodedConditionData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "sendingChainId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "receivingChainId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preparedBlockNumber",
            type: "uint256",
          },
        ],
        internalType: "struct TransactionData",
        name: "txData",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "unlockData",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "transactionManagerChainId",
        type: "uint256",
      },
    ],
    name: "shouldCancel",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "receivingChainCondition",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingChainCondition",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingChainTxManagerAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "address",
            name: "router",
            type: "address",
          },
          {
            internalType: "address",
            name: "initiator",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingChainFallback",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "callTo",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "callDataHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "encodedConditionData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "sendingChainId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "receivingChainId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preparedBlockNumber",
            type: "uint256",
          },
        ],
        internalType: "struct TransactionData",
        name: "txData",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "unlockData",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "relayerFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "transactionManagerChainId",
        type: "uint256",
      },
    ],
    name: "shouldFulfill",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "";

export class SignatureInterpreter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SignatureInterpreter> {
    return super.deploy(overrides || {}) as Promise<SignatureInterpreter>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SignatureInterpreter {
    return super.attach(address) as SignatureInterpreter;
  }
  connect(signer: Signer): SignatureInterpreter__factory {
    return super.connect(signer) as SignatureInterpreter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SignatureInterpreterInterface {
    return new utils.Interface(_abi) as SignatureInterpreterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SignatureInterpreter {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SignatureInterpreter;
  }
}
