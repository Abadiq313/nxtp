/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SignatureInterpreter,
  SignatureInterpreterInterface,
} from "../SignatureInterpreter";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "receivingChainCondition",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingChainCondition",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingChainTxManagerAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "address",
            name: "router",
            type: "address",
          },
          {
            internalType: "address",
            name: "initiator",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingChainFallback",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "callTo",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "callDataHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "encodedConditionData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "sendingChainId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "receivingChainId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preparedBlockNumber",
            type: "uint256",
          },
        ],
        internalType: "struct TransactionData",
        name: "txData",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "unlockData",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "transactionManagerChainId",
        type: "uint256",
      },
    ],
    name: "shouldCancel",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "receivingChainCondition",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingChainCondition",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingChainTxManagerAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "address",
            name: "router",
            type: "address",
          },
          {
            internalType: "address",
            name: "initiator",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingChainFallback",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "callTo",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "callDataHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "encodedConditionData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "sendingChainId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "receivingChainId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preparedBlockNumber",
            type: "uint256",
          },
        ],
        internalType: "struct TransactionData",
        name: "txData",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "unlockData",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "relayerFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "transactionManagerChainId",
        type: "uint256",
      },
    ],
    name: "shouldFulfill",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610867806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80636a8cfd481461003b578063bad0b50f14610062575b600080fd5b61004e6100493660046106c2565b610075565b604051901515815260200160405180910390f35b61004e610070366004610655565b61011a565b6000856101c0013582146100c657856101e0013582146100c65760405162461bcd60e51b815260206004820152600760248201526611a9a49d18189960c91b60448201526064015b60405180910390fd5b6100d66080870160608801610627565b6001600160a01b0316610106610180880135856101e08a01356100ff60608c0160408d01610627565b8a8a6101b8565b6001600160a01b0316149695505050505050565b6000846101c00135821461016657846101e0013582146101665760405162461bcd60e51b815260206004820152600760248201526611a9a49d18189960c91b60448201526064016100bd565b6101766080860160608701610627565b6001600160a01b03166101a56101808701356101e088013561019e60608a0160408b01610627565b8888610238565b6001600160a01b03161495945050505050565b6040805160a0810182528781526020808201889052825180840184526007815266199d5b199a5b1b60ca1b8183015282840152606082018790526001600160a01b0386166080830152915160009261022c91610216918491016107d6565b60405160208183030381529060405285856102a4565b98975050505050505050565b60008060405180608001604052808881526020016040518060400160405280600681526020016518d85b98d95b60d21b8152508152602001878152602001866001600160a01b03168152509050610299816040516020016102169190610785565b979650505050505050565b600061034361030785805190602001206040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b84848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061034b92505050565b949350505050565b600081516041141561037f5760208201516040830151606084015160001a610375868285856103f5565b93505050506103ef565b8151604014156103a7576020820151604083015161039e85838361059e565b925050506103ef565b60405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016100bd565b92915050565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211156104725760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016100bd565b8360ff16601b148061048757508360ff16601c145b6104de5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016100bd565b6040805160008082526020820180845288905260ff871692820192909252606081018590526080810184905260019060a0016020604051602081039080840390855afa158015610532573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166105955760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016100bd565b95945050505050565b60006001600160ff1b03821660ff83901c601b016105be868287856103f5565b9695505050505050565b60008083601f8401126105d9578182fd5b50813567ffffffffffffffff8111156105f0578182fd5b60208301915083602082850101111561060857600080fd5b9250929050565b60006102608284031215610621578081fd5b50919050565b600060208284031215610638578081fd5b81356001600160a01b038116811461064e578182fd5b9392505050565b6000806000806060858703121561066a578283fd5b843567ffffffffffffffff80821115610681578485fd5b61068d8883890161060f565b955060208701359150808211156106a2578485fd5b506106af878288016105c8565b9598909750949560400135949350505050565b6000806000806000608086880312156106d9578081fd5b853567ffffffffffffffff808211156106f0578283fd5b6106fc89838a0161060f565b96506020880135915080821115610711578283fd5b5061071e888289016105c8565b9699909850959660408101359660609091013595509350505050565b60008151808452815b8181101561075f57602081850181015186830182015201610743565b818111156107705782602083870101525b50601f01601f19169290920160200192915050565b602081528151602082015260006020830151608060408401526107ab60a084018261073a565b6040850151606085810191909152909401516001600160a01b03166080909301929092525090919050565b6020815281516020820152602082015160408201526000604083015160a0606084015261080660c084018261073a565b6060850151608085810191909152909401516001600160a01b031660a090930192909252509091905056fea2646970667358221220a2e5d23eaae411a9190192aedea0a6705c9e19b980f5d23ae9c1c4d82601c5b464736f6c63430008040033";

export class SignatureInterpreter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SignatureInterpreter> {
    return super.deploy(overrides || {}) as Promise<SignatureInterpreter>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SignatureInterpreter {
    return super.attach(address) as SignatureInterpreter;
  }
  connect(signer: Signer): SignatureInterpreter__factory {
    return super.connect(signer) as SignatureInterpreter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SignatureInterpreterInterface {
    return new utils.Interface(_abi) as SignatureInterpreterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SignatureInterpreter {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SignatureInterpreter;
  }
}
