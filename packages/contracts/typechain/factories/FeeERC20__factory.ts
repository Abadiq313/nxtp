/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { FeeERC20, FeeERC20Interface } from "../FeeERC20";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "setFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016005553480156200001657600080fd5b506040518060400160405280600981526020017f46656520546f6b656e00000000000000000000000000000000000000000000008152506040518060400160405280600781526020017f464545524332300000000000000000000000000000000000000000000000000081525081600390805190602001906200009b9291906200025c565b508060049080519060200190620000b49291906200025c565b505050620000d33369d3c21bcecceda1000000620000d960201b60201c565b620004b8565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156200014c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001439062000344565b60405180910390fd5b62000160600083836200025260201b60201c565b806002600082825462000174919062000394565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254620001cb919062000394565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405162000232919062000366565b60405180910390a36200024e600083836200025760201b60201c565b5050565b505050565b505050565b8280546200026a90620003fb565b90600052602060002090601f0160209004810192826200028e5760008555620002da565b82601f10620002a957805160ff1916838001178555620002da565b82800160010185558215620002da579182015b82811115620002d9578251825591602001919060010190620002bc565b5b509050620002e99190620002ed565b5090565b5b8082111562000308576000816000905550600101620002ee565b5090565b60006200031b601f8362000383565b915062000328826200048f565b602082019050919050565b6200033e81620003f1565b82525050565b600060208201905081810360008301526200035f816200030c565b9050919050565b60006020820190506200037d600083018462000333565b92915050565b600082825260208201905092915050565b6000620003a182620003f1565b9150620003ae83620003f1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620003e657620003e562000431565b5b828201905092915050565b6000819050919050565b600060028204905060018216806200041457607f821691505b602082108114156200042b576200042a62000460565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b61185a80620004c86000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806369fe0e2d11610097578063a457c2d711610066578063a457c2d714610286578063a9059cbb146102b6578063dd62ed3e146102e6578063ddca3f4314610316576100f5565b806369fe0e2d1461020057806370a082311461021c57806395d89b411461024c5780639dc29fac1461026a576100f5565b806323b872dd116100d357806323b872dd14610166578063313ce5671461019657806339509351146101b457806340c10f19146101e4576100f5565b806306fdde03146100fa578063095ea7b31461011857806318160ddd14610148575b600080fd5b610102610334565b60405161010f919061120e565b60405180910390f35b610132600480360381019061012d9190610fed565b6103c6565b60405161013f91906111f3565b60405180910390f35b6101506103e4565b60405161015d9190611350565b60405180910390f35b610180600480360381019061017b9190610f9e565b6103ee565b60405161018d91906111f3565b60405180910390f35b61019e610424565b6040516101ab919061136b565b60405180910390f35b6101ce60048036038101906101c99190610fed565b61042d565b6040516101db91906111f3565b60405180910390f35b6101fe60048036038101906101f99190610fed565b6104d9565b005b61021a60048036038101906102159190611029565b6104e7565b005b61023660048036038101906102319190610f39565b6104f1565b6040516102439190611350565b60405180910390f35b610254610539565b604051610261919061120e565b60405180910390f35b610284600480360381019061027f9190610fed565b6105cb565b005b6102a0600480360381019061029b9190610fed565b6105d9565b6040516102ad91906111f3565b60405180910390f35b6102d060048036038101906102cb9190610fed565b6106c4565b6040516102dd91906111f3565b60405180910390f35b61030060048036038101906102fb9190610f62565b6106ed565b60405161030d9190611350565b60405180910390f35b61031e610774565b60405161032b9190611350565b60405180910390f35b606060038054610343906114b4565b80601f016020809104026020016040519081016040528092919081815260200182805461036f906114b4565b80156103bc5780601f10610391576101008083540402835291602001916103bc565b820191906000526020600020905b81548152906001019060200180831161039f57829003601f168201915b5050505050905090565b60006103da6103d361077a565b8484610782565b6001905092915050565b6000600254905090565b600080600554836103ff91906113f8565b905061040d8560055461094d565b610418858583610b24565b60019150509392505050565b60006012905090565b60006104cf61043a61077a565b84846001600061044861077a565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104ca91906113a2565b610782565b6001905092915050565b6104e38282610da5565b5050565b8060058190555050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054610548906114b4565b80601f0160208091040260200160405190810160405280929190818152602001828054610574906114b4565b80156105c15780601f10610596576101008083540402835291602001916105c1565b820191906000526020600020905b8154815290600101906020018083116105a457829003601f168201915b5050505050905090565b6105d5828261094d565b5050565b600080600160006105e861077a565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156106a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069c90611310565b60405180910390fd5b6106b96106b061077a565b85858403610782565b600191505092915050565b600080600554836106d591906113f8565b90506106e2338583610b24565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60055481565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156107f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e9906112f0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610862576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085990611270565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516109409190611350565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156109bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b4906112b0565b60405180910390fd5b6109c982600083610f05565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a4f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4690611250565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160026000828254610aa691906113f8565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b0b9190611350565b60405180910390a3610b1f83600084610f0a565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610b94576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8b906112d0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c04576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bfb90611230565b60405180910390fd5b610c0f838383610f05565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610c95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8c90611290565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d2891906113a2565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610d8c9190611350565b60405180910390a3610d9f848484610f0a565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610e15576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0c90611330565b60405180910390fd5b610e2160008383610f05565b8060026000828254610e3391906113a2565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e8891906113a2565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610eed9190611350565b60405180910390a3610f0160008383610f0a565b5050565b505050565b505050565b600081359050610f1e816117f6565b92915050565b600081359050610f338161180d565b92915050565b600060208284031215610f4b57600080fd5b6000610f5984828501610f0f565b91505092915050565b60008060408385031215610f7557600080fd5b6000610f8385828601610f0f565b9250506020610f9485828601610f0f565b9150509250929050565b600080600060608486031215610fb357600080fd5b6000610fc186828701610f0f565b9350506020610fd286828701610f0f565b9250506040610fe386828701610f24565b9150509250925092565b6000806040838503121561100057600080fd5b600061100e85828601610f0f565b925050602061101f85828601610f24565b9150509250929050565b60006020828403121561103b57600080fd5b600061104984828501610f24565b91505092915050565b61105b8161143e565b82525050565b600061106c82611386565b6110768185611391565b9350611086818560208601611481565b61108f81611544565b840191505092915050565b60006110a7602383611391565b91506110b282611555565b604082019050919050565b60006110ca602283611391565b91506110d5826115a4565b604082019050919050565b60006110ed602283611391565b91506110f8826115f3565b604082019050919050565b6000611110602683611391565b915061111b82611642565b604082019050919050565b6000611133602183611391565b915061113e82611691565b604082019050919050565b6000611156602583611391565b9150611161826116e0565b604082019050919050565b6000611179602483611391565b91506111848261172f565b604082019050919050565b600061119c602583611391565b91506111a78261177e565b604082019050919050565b60006111bf601f83611391565b91506111ca826117cd565b602082019050919050565b6111de8161146a565b82525050565b6111ed81611474565b82525050565b60006020820190506112086000830184611052565b92915050565b600060208201905081810360008301526112288184611061565b905092915050565b600060208201905081810360008301526112498161109a565b9050919050565b60006020820190508181036000830152611269816110bd565b9050919050565b60006020820190508181036000830152611289816110e0565b9050919050565b600060208201905081810360008301526112a981611103565b9050919050565b600060208201905081810360008301526112c981611126565b9050919050565b600060208201905081810360008301526112e981611149565b9050919050565b600060208201905081810360008301526113098161116c565b9050919050565b600060208201905081810360008301526113298161118f565b9050919050565b60006020820190508181036000830152611349816111b2565b9050919050565b600060208201905061136560008301846111d5565b92915050565b600060208201905061138060008301846111e4565b92915050565b600081519050919050565b600082825260208201905092915050565b60006113ad8261146a565b91506113b88361146a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156113ed576113ec6114e6565b5b828201905092915050565b60006114038261146a565b915061140e8361146a565b925082821015611421576114206114e6565b5b828203905092915050565b60006114378261144a565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b8381101561149f578082015181840152602081019050611484565b838111156114ae576000848401525b50505050565b600060028204905060018216806114cc57607f821691505b602082108114156114e0576114df611515565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6117ff8161142c565b811461180a57600080fd5b50565b6118168161146a565b811461182157600080fd5b5056fea2646970667358221220d94b9165954cf0be524b8ce222ee8e53cc18215951d41b1698c02bf71cee9f2564736f6c63430008040033";

export class FeeERC20__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FeeERC20> {
    return super.deploy(overrides || {}) as Promise<FeeERC20>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): FeeERC20 {
    return super.attach(address) as FeeERC20;
  }
  connect(signer: Signer): FeeERC20__factory {
    return super.connect(signer) as FeeERC20__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FeeERC20Interface {
    return new utils.Interface(_abi) as FeeERC20Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FeeERC20 {
    return new Contract(address, _abi, signerOrProvider) as FeeERC20;
  }
}
