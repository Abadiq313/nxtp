/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Counter, CounterInterface } from "../Counter";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "count",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "increment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "incrementAndSend",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "value",
        type: "bool",
      },
    ],
    name: "setShouldRevert",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "shouldRevert",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600060015534801561001557600080fd5b5060008060006101000a81548160ff0219169083151502179055506112438061003f6000396000f3fe60806040526004361061004a5760003560e01c806306661abd1461004f5780636813d7871461007a578063d09de08a146100a3578063d2eee78a146100ba578063d3072d82146100d6575b600080fd5b34801561005b57600080fd5b50610064610101565b6040516100719190610e87565b60405180910390f35b34801561008657600080fd5b506100a1600480360381019061009c9190610a9a565b610107565b005b3480156100af57600080fd5b506100b8610123565b005b6100d460048036038101906100cf9190610a4b565b61018c565b005b3480156100e257600080fd5b506100eb610249565b6040516100f89190610d4a565b60405180910390f35b60015481565b806000806101000a81548160ff02191690831515021790555050565b60008054906101000a900460ff1615610171576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016890610da7565b60405180910390fd5b60018060008282546101839190610ed4565b92505081905550565b6101958361025a565b156101e1578034146101dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d390610d87565b60405180910390fd5b610231565b60003414610224576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021b90610e67565b60405180910390fd5b61023083333084610317565b5b610239610123565b6102448383836103ad565b505050565b60008054906101000a900460ff1681565b60006102887f8697982f3a7da667345a719053ee843156527bce75aa265604dfc2456ff6a47760001b61045e565b6102b47ff396d7d6f9f78e16f352952b32f373337cec476d0f135098717c37f0421e708360001b61045e565b6102e07f2ee1ff8650ad688b676028cd54f8acf8b62398d61b147c74235d09d3a015ecd760001b61045e565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b6103437f9d7061e5e1a69d943efe7282a677a1e2b5a72520a322a3bda6f460aba7bbf6fa60001b61045e565b61036f7f5568efae48cb0d0fdad7fb9201ca253e06c557c20a3f2cbec685ecbe4b18fb0560001b61045e565b61039b7fce78eda7b1039ac22ebf998f255384ff14ee452c4ec2e77fc7b00bd264ce263c60001b61045e565b6103a784848484610461565b50505050565b6103d97fef18de95983b3ef458c4288e4b7b5520469140897c8092f2d6f17bc57a6dd10c60001b61045e565b6104057f2d774ad1fd56ec164021419f7ffbb6be8a68ee968ecb979979eb1b5b176f76eb60001b61045e565b6104317f1374f28f8cf5b769043361d5b0b545bbae69a9d84794e44f727f8f53eb011a6260001b61045e565b61043a8361025a565b61044e576104498383836104ea565b610459565b610458828261057e565b5b505050565b50565b6104e4846323b872dd60e01b85858560405160240161048293929190610cea565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610610565b50505050565b6105167f74c820258315e0d061430fc4b63295923bd699551709b2901510f32af7f4d75060001b61045e565b6105427f48cd9ab60815460314688df66e5c9e8a56e5a6f5f6c2782ae23dee7c67cc405a60001b61045e565b61056e7f8cd7887fa1d6ac3424de5f4dbf0bdf567d242015aef9b1f593cb6eb86832ba7560001b61045e565b6105798383836106d7565b505050565b6105aa7f1759263802dbaaf404fc5b3258ab184f1306771d02fc02909b248d0755c7b6bc60001b61045e565b6105d67f8c4de2ca3eb1e9c50472a064a8c5ca5439889bcbbb6879a5331cd92af5e2889860001b61045e565b6106027f7ba96828364ffaad0f46b3c5ed695d2c42e3d0c883f7774d20c945096ce99f0d60001b61045e565b61060c828261075d565b5050565b6000610672826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166108519092919063ffffffff16565b90506000815111156106d257808060200190518101906106929190610ac3565b6106d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c890610e47565b60405180910390fd5b5b505050565b6107588363a9059cbb60e01b84846040516024016106f6929190610d21565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610610565b505050565b804710156107a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079790610de7565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff16826040516107c690610cd5565b60006040518083038185875af1925050503d8060008114610803576040519150601f19603f3d011682016040523d82523d6000602084013e610808565b606091505b505090508061084c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084390610dc7565b60405180910390fd5b505050565b60606108608484600085610869565b90509392505050565b6060824710156108ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a590610e07565b60405180910390fd5b6108b78561097d565b6108f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ed90610e27565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161091f9190610cbe565b60006040518083038185875af1925050503d806000811461095c576040519150601f19603f3d011682016040523d82523d6000602084013e610961565b606091505b5091509150610971828286610990565b92505050949350505050565b600080823b905060008111915050919050565b606083156109a0578290506109f0565b6000835111156109b35782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e79190610d65565b60405180910390fd5b9392505050565b600081359050610a06816111c8565b92915050565b600081359050610a1b816111df565b92915050565b600081519050610a30816111df565b92915050565b600081359050610a45816111f6565b92915050565b600080600060608486031215610a6057600080fd5b6000610a6e868287016109f7565b9350506020610a7f868287016109f7565b9250506040610a9086828701610a36565b9150509250925092565b600060208284031215610aac57600080fd5b6000610aba84828501610a0c565b91505092915050565b600060208284031215610ad557600080fd5b6000610ae384828501610a21565b91505092915050565b610af581610f2a565b82525050565b610b0481610f3c565b82525050565b6000610b1582610ea2565b610b1f8185610eb8565b9350610b2f818560208601610f72565b80840191505092915050565b6000610b4682610ead565b610b508185610ec3565b9350610b60818560208601610f72565b610b6981610fd4565b840191505092915050565b6000610b81602483610ec3565b9150610b8c82610fe5565b604082019050919050565b6000610ba4601f83610ec3565b9150610baf82611034565b602082019050919050565b6000610bc7603a83610ec3565b9150610bd28261105d565b604082019050919050565b6000610bea601d83610ec3565b9150610bf5826110ac565b602082019050919050565b6000610c0d602683610ec3565b9150610c18826110d5565b604082019050919050565b6000610c30600083610eb8565b9150610c3b82611124565b600082019050919050565b6000610c53601d83610ec3565b9150610c5e82611127565b602082019050919050565b6000610c76602a83610ec3565b9150610c8182611150565b604082019050919050565b6000610c99601e83610ec3565b9150610ca48261119f565b602082019050919050565b610cb881610f68565b82525050565b6000610cca8284610b0a565b915081905092915050565b6000610ce082610c23565b9150819050919050565b6000606082019050610cff6000830186610aec565b610d0c6020830185610aec565b610d196040830184610caf565b949350505050565b6000604082019050610d366000830185610aec565b610d436020830184610caf565b9392505050565b6000602082019050610d5f6000830184610afb565b92915050565b60006020820190508181036000830152610d7f8184610b3b565b905092915050565b60006020820190508181036000830152610da081610b74565b9050919050565b60006020820190508181036000830152610dc081610b97565b9050919050565b60006020820190508181036000830152610de081610bba565b9050919050565b60006020820190508181036000830152610e0081610bdd565b9050919050565b60006020820190508181036000830152610e2081610c00565b9050919050565b60006020820190508181036000830152610e4081610c46565b9050919050565b60006020820190508181036000830152610e6081610c69565b9050919050565b60006020820190508181036000830152610e8081610c8c565b9050919050565b6000602082019050610e9c6000830184610caf565b92915050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b6000610edf82610f68565b9150610eea83610f68565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610f1f57610f1e610fa5565b5b828201905092915050565b6000610f3582610f48565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015610f90578082015181840152602081019050610f75565b83811115610f9f576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f8301169050919050565b7f696e6372656d656e74416e6453656e643a20494e56414c49445f4554485f414d60008201527f4f554e5400000000000000000000000000000000000000000000000000000000602082015250565b7f696e6372656d656e743a2073686f756c64526576657274206973207472756500600082015250565b7f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260008201527f6563697069656e74206d61792068617665207265766572746564000000000000602082015250565b7f416464726573733a20696e73756666696369656e742062616c616e6365000000600082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b50565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b7f696e6372656d656e74416e6453656e643a204554485f574954485f4552430000600082015250565b6111d181610f2a565b81146111dc57600080fd5b50565b6111e881610f3c565b81146111f357600080fd5b50565b6111ff81610f68565b811461120a57600080fd5b5056fea26469706673582212209fc3a7abb7354b818979a23707661e845452246248b21c8b347fb3680e9bfe6264736f6c63430008040033";

export class Counter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Counter> {
    return super.deploy(overrides || {}) as Promise<Counter>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Counter {
    return super.attach(address) as Counter;
  }
  connect(signer: Signer): Counter__factory {
    return super.connect(signer) as Counter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CounterInterface {
    return new utils.Interface(_abi) as CounterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Counter {
    return new Contract(address, _abi, signerOrProvider) as Counter;
  }
}
